# resume training
model_restore: '' # start new training
#model_restore: 'checkpoints/celebahq/model_exp0/states.pth'

# dataloading
dataset_train_path: ['dataset/train/RGI_13_average_2500_size_256/',] #'dataset/train/RGI_11_average_2000_size_256/', #RGI_13_average_2500_size_256
dataset_val_path: ['dataset/val/RGI_13_average_2500_size_256/',] #'dataset/val/RGI_11_average_2000_size_256/', #RGI_13_average_2500_size_256
scan_subdirs: True # Are the images organized in subfolders ?
random_crop: 0.5  # Probability of random cropping (followed by Resize)
random_crop_hmin: 100 # Minimum height of cropped image #100 # isn't 100 too small ?
random_crop_hmax: 256  # Maximum height of cropped image #256
random_horizontal_flip: 0.5 # Probability of flipping horizontally
random_vertical_flip: 0.5 # Probability of flipping vertically
batch_size: 12 #16
batch_size_val: 4
num_workers: 8 # qua se metto > 0 attivo multi processori.

# training
log_dir: 'Deepfillv2/callbacks/logs/' # Tensorboard logging folder
#checkpoint_dir: 'Deepfillv2/callbacks/checkpoints/segmented_model/' # Checkpoint folder
checkpoint_dir: 'Deepfillv2/callbacks/checkpoints/box_model/' # Checkpoint folder

use_cuda_if_available: True
random_seed: False # options: False | <int>

g_lr: 0.0001 # lr for Adam optimizer (generator)
g_beta1: 0.5 # beta1 for Adam optimizer (generator)
g_beta2: 0.999 # beta2 for Adam optimizer (generator)

d_lr: 0.0001 # lr for Adam optimizer (discriminator)
d_beta1: 0.5 # beta1 for Adam optimizer (discriminator)
d_beta2: 0.999 # beta2 for Adam optimizer (discriminator)

max_iters: 100000 # number of batches to train the models (e.g. 100000)

# logging
tb_logging: True # Enable Tensorboard logging?
viz_max_out: 10 # number of images from batch 
# if optional: set to False to deactivate
print_iter: 100 # write losses to console and tensorboard
save_imgs_to_tb_iter: 0 #10000 #10000 #1000 #500 # (optional) add image grids to tensorboard
save_imgs_to_disk_iter: 1000 #1000 #1000 #500 # (optional) save image grids in checkpoint folder
save_model_multiple_iter: 0 # Every multiple of this number the model is saved as states_{n_iter}.pth
save_model_specific_iter: 0 # (optional) save model at specific iteration as states_{n_iter}.pth
save_model_final: 1 # save model at last iteration. Set to either 0 or 1.

img_shapes: [256, 256, 1]

# mask options
height: 128
width: 128
max_delta_height: 32 #dont understand purpose
max_delta_width: 32 #dont understand purpose
vertical_margin: 0
horizontal_margin: 0

# loss
gan_loss: 'hinge' # options: 'hinge', 'ls', 'wasserstein'
gan_loss_alpha: 1.

ae_loss: 'l1' # True # options: 'l1', 'l1l2'
ae_loss_alpha: 1.

power_law_loss: False
power_law_alpha: 1.e-10
power_law_c: 0.03
power_law_gamma: 1.37